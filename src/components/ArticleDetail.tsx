import { useState } from 'react';
import { Article } from '../services/news';
import { motion } from 'framer-motion';

interface ArticleDetailProps {
  article: Article;
  onClose: () => void;
}

export default function ArticleDetail({ article, onClose }: ArticleDetailProps) {
  const [activeTab, setActiveTab] = useState<'summary' | 'context' | 'full'>('summary');
  
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-20"
      onClick={onClose}
    >
      <motion.div
        initial={{ y: 50, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        exit={{ y: 50, opacity: 0 }}
        className="bg-white dark:bg-gray-800 rounded-lg shadow-xl overflow-hidden w-full max-w-4xl max-h-[90vh] flex flex-col text-gray-900 dark:text-gray-100 transition-colors duration-200"
        onClick={(e) => e.stopPropagation()}
      >
        {/* Header with image */}
        {article.imageUrl && (
          <div className="relative h-64">
            <img 
              src={article.imageUrl} 
              alt={article.title} 
              className="w-full h-full object-cover"
            />
            <div className="absolute inset-0 bg-gradient-to-t from-black to-transparent opacity-70"></div>
            <button 
              onClick={onClose}
              className="absolute top-4 right-4 bg-black bg-opacity-50 text-white rounded-full p-2 hover:bg-opacity-70"
            >
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        )}
        
        {/* Content */}
        <div className="p-6 overflow-y-auto flex-grow">
          <h1 className="text-2xl font-bold mb-2">{article.title}</h1>
          
          <div className="flex items-center mt-1 mb-4 text-sm text-gray-500 dark:text-gray-400">
            <span className="font-medium">{article.source}</span>
            <span className="mx-2">•</span>
            <span>{new Date(article.publishedAt).toLocaleDateString()}</span>
            <span className="mx-2">•</span>
            <span className="px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded-md text-xs">{article.category}</span>
          </div>
          
          {/* Tabs */}
          <div className="flex border-b border-gray-200 dark:border-gray-700 mb-4">
            <button
              onClick={() => setActiveTab('summary')}
              className={`px-4 py-2 ${activeTab === 'summary' ? 'border-b-2 border-primary text-primary dark:text-blue-400' : 'text-gray-500 dark:text-gray-400'}`}
            >
              AI Summary
            </button>
            <button
              onClick={() => setActiveTab('context')}
              className={`px-4 py-2 ${activeTab === 'context' ? 'border-b-2 border-primary text-primary dark:text-blue-400' : 'text-gray-500 dark:text-gray-400'}`}
            >
              Context
            </button>
            <button
              onClick={() => setActiveTab('full')}
              className={`px-4 py-2 ${activeTab === 'full' ? 'border-b-2 border-primary text-primary dark:text-blue-400' : 'text-gray-500 dark:text-gray-400'}`}
            >
              Full Article
            </button>
          </div>
          
          {/* Tab content */}
          <div className="mt-4">
            {activeTab === 'summary' && (
              <div>
                <p className="text-lg leading-relaxed">{article.summary}</p>
                
                {article.relevanceReason && (
                  <div className="mt-6 p-4 bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-md">
                    <h3 className="font-medium mb-2">Why this matters to you:</h3>
                    <p>{article.relevanceReason}</p>
                  </div>
                )}
              </div>
            )}
            
            {activeTab === 'context' && (
              <div>
                <h3 className="font-medium mb-2">Historical Context & Analysis</h3>
                <p className="mb-4 leading-relaxed">
                  {article.content || 'Historical context is not available for this article.'}
                </p>
                
                {/* Timeline - In a real app, this would be generated by AI */}
                <div className="mt-6">
                  <h4 className="font-medium mb-3">Timeline of Events</h4>
                  <div className="border-l-2 border-gray-200 dark:border-gray-700 pl-4 space-y-4">
                    <div className="relative">
                      <div className="absolute -left-6 w-2.5 h-2.5 rounded-full bg-primary"></div>
                      <p className="text-sm font-medium">January 2023</p>
                      <p className="text-sm text-gray-600 dark:text-gray-400">Initial reports emerge</p>
                    </div>
                    <div className="relative">
                      <div className="absolute -left-6 w-2.5 h-2.5 rounded-full bg-primary"></div>
                      <p className="text-sm font-medium">March 2023</p>
                      <p className="text-sm text-gray-600 dark:text-gray-400">First major developments</p>
                    </div>
                    <div className="relative">
                      <div className="absolute -left-6 w-2.5 h-2.5 rounded-full bg-primary"></div>
                      <p className="text-sm font-medium">Present</p>
                      <p className="text-sm text-gray-600 dark:text-gray-400">Current situation as reported</p>
                    </div>
                  </div>
                </div>
              </div>
            )}
            
            {activeTab === 'full' && (
              <div>
                <p className="mb-4 leading-relaxed">
                  {article.content || (
                    <span className="italic text-gray-500 dark:text-gray-400">
                      Full article content is not available. Please visit the source website for the complete article.
                    </span>
                  )}
                </p>
                
                {article.url && (
                  <a
                    href={article.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="inline-block mt-4 px-4 py-2 bg-primary text-white rounded-md hover:bg-opacity-90"
                  >
                    Read on {article.source}
                  </a>
                )}
              </div>
            )}
          </div>
        </div>
      </motion.div>
    </motion.div>
  );
} 